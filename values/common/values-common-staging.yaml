aws-load-balancer-controller:
  enabled: false
  clusterName: helm
  serviceAccount:
    create: false
    name: aws-load-balancer-controller

datadog:
  enabled: false

serviceAccount:
  create: false
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::534420079206:role/AmazonEKSApplicationLoadBalancerControllerRole
  name: aws-load-balancer-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: aws-load-balancer-controller
  namespace: default

podAnnotations: {}

podSecurityContext: {}

service:
  type: NodePort
  httpPort: 80
  httpsPort: 443

replicaCount: 2

image:
  pullPolicy: Always
  tag: staging

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# datadog 관련 환경변수
env:
- name: DD_ENV
  valueFrom:
    fieldRef:
      fieldPath: metadata.labels['tags.datadoghq.com/env']
- name: DD_SERVICE
  valueFrom:
    fieldRef:
      fieldPath: metadata.labels['tags.datadoghq.com/service']

ingress:
  enabled: false

initContainers:
  env:
  - name: GIT_SYNC_REPO
    value: https://gitlab.stunitas.com/Platform/01_conects_mgong.git
  - name: GIT_SYNC_BRANCH
    value: staging
  - name: GIT_SYNC_DEPTH
    value: "1"
  - name: GIT_SYNC_DEST
    value: git-sync
  - name: GIT_SYNC_ONE_TIME
    value: "true"
  - name: GIT_SYNC_USERNAME
    valueFrom:
      secretKeyRef:
        key: username
        name: git-creds
  - name: GIT_SYNC_PASSWORD
    valueFrom:
      secretKeyRef:
        key: password
        name: git-creds


volumeMounts:
- name: php-ini
  mountPath: /usr/local/etc/php/php.ini
  subPath: php.ini

volumes:
- name: php-ini
  configMap:
    defaultMode: 420
    name: php-ini

resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 64Mi

autoscaling:
  minReplicas: 2
  maxReplicas: 2
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 60

configmap:
  enabled: false

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

nodeSelector: {}
tolerations: []
affinity: {}
minReadySeconds: 10
revisionHistoryLimit: 2
terminationMessagePath: /dev/termination-log
terminationMessagePolicy: File
dnsPolicy: ClusterFirst
restartPolicy: Always
schedulerName: default-scheduler
terminationGracePeriodSeconds: 30
