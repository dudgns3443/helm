aws-load-balancer-controller:
  enabled: false
  clusterName: helm
  serviceAccount:
    create: false
    name: aws-load-balancer-controller

datadog:
  enabled: false

replicaCount: 2

image:
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::534420079206:role/AmazonEKSApplicationLoadBalancerControllerRole
  name: aws-load-balancer-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: aws-load-balancer-controller
  namespace: default

podAnnotations: {}

podSecurityContext: {}

service:
  type: NodePort
  httpPort: 80
  httpsPort: 443

env:
- name: DD_ENV
  valueFrom:
    fieldRef:
      fieldPath: metadata.labels['tags.datadoghq.com/env']
- name: DD_SERVICE
  valueFrom:
    fieldRef:
      fieldPath: metadata.labels['tags.datadoghq.com/service']

resources:
  limits:
    cpu: 450m
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 1Gi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 60

configmap:
  enabled: false

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 10%
    maxUnavailable: 10%

tolerations: []

affinity: {}

minReadySeconds: 10

revisionHistoryLimit: 2

terminationMessagePath: /dev/termination-log

terminationMessagePolicy: File

dnsPolicy: ClusterFirst

restartPolicy: Always

schedulerName: default-scheduler

terminationGracePeriodSeconds: 30

ingress:
  enabled: false
